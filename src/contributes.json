{
  "contributes": {
    "configuration": [
      {
        "id": "vscode-db2i",
        "title": "General",
        "order": 0,
        "properties": {
          "vscode-db2i.pageSize": {
            "type": "number",
            "description": "Page size for Schema browser",
            "default": 500
          },
          "vscode-db2i.alwaysStartSQLJob": {
            "type": "string",
            "description": "Name of configuration to use when auto starting a job. 'new' for brand new default job, 'ask' to be asked, 'never' to never start, or a name of a stored configuration",
            "default": "ask"
          },
          "vscode-db2i.jobConfigs": {
            "type": "object",
            "description": "Saved configs for",
            "default": {},
            "additionalProperties": true
          },
          "vscode-db2i.jobJava": {
            "type": "string",
            "description": "Java version for Server Component",
            "default": "/QOpenSys/QIBM/ProdData/JavaVM/jdk80/64bit/bin/java",
            "enum": [
              "/QOpenSys/QIBM/ProdData/JavaVM/jdk80/64bit/bin/java",
              "/QOpenSys/QIBM/ProdData/JavaVM/jdk11/64bit/bin/java",
              "/QOpenSys/QIBM/ProdData/JavaVM/jdk17/64bit/bin/java",
              "/QOpenSys/QIBM/ProdData/JavaVM/jdk21/64bit/bin/java"
            ],
            "enumDescriptions": [
              "Java 8 (system default)",
              "Java 11",
              "Java 17",
              "Java 21"
            ]
          }
        }
      },
      {
        "id": "vscode-db2i.sqlFormat",
        "title": "SQL Formatting",
        "properties": {
          "vscode-db2i.sqlFormat.identifierCase": {
            "type": "string",
            "description": "Format SQL identifiers into a certain case",
            "default": "preserve",
            "enum": [
              "lower",
              "upper",
              "preserve"
            ]
          },
          "vscode-db2i.sqlFormat.keywordCase": {
            "type": "string",
            "description": "Format SQL keywords into a certain case",
            "default": "lower",
            "enum": [
              "lower",
              "upper"
            ]
          },
          "vscode-db2i.sqlFormat.spaceBetweenStatements": {
            "type": "string",
            "description": "Add space between statements.",
            "default": "true",
            "enum": [
              "true",
              "false"
            ]
          }
        }
      },
      {
        "id": "vscode-db2i.ai",
        "title": "AI integrations",
        "properties": {
          "vscode-db2i.ai.useSchemaDefinition": {
            "type": "boolean",
            "description": "Provide Schema definition as additional context in Continue and Copilot",
            "default": true
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "db2-explorer",
          "title": "Db2 for i",
          "icon": "$(database)"
        }
      ],
      "panel": [
        {
          "id": "ibmi-panel",
          "title": "IBM i",
          "icon": "$(search)"
        }
      ]
    },
    "views": {
      "db2-explorer": [
        {
          "id": "testingView-db2i",
          "name": "Test cases",
          "when": "code-for-ibmi:connected && vscode-db2i:testing"
        }
      ]
    },
    "commands": [
      {
        "command": "vscode-db2i.json.pasteGenerator",
        "title": "Paste JSON as SQL",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.json.pasteParser",
        "title": "Generate JSON SQL parser",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.getStatementUri",
        "title": "Copy sharable statement URI",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.importData",
        "title": "Generate Insert from File",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.importDataContextMenu",
        "title": "Generate Insert from File",
        "category": "Db2 for i"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-db2i.getStatementUri",
          "when": "editorLangId == sql"
        },
        {
          "command": "vscode-db2i.importDataContextMenu",
          "when": "false"
        }
      ],
      "editor/context": [
        {
          "command": "vscode-db2i.getStatementUri",
          "group": "sql@0",
          "when": "editorLangId == sql"
        },
        {
          "command": "vscode-db2i.json.pasteGenerator",
          "group": "sql@1",
          "when": "editorLangId == sql"
        },
        {
          "command": "vscode-db2i.json.pasteParser",
          "group": "sql@2",
          "when": "editorLangId == sql"
        },
        {
          "command": "vscode-db2i.importDataContextMenu",
          "group": "sql@3"
        }
      ]
    }
  }
}