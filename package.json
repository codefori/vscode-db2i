{
  "name": "vscode-db2i",
  "displayName": "Db2 for IBM i",
  "description": "Db2 for IBM i tools in VS Code",
  "version": "1.13.0",
  "engines": {
    "vscode": "^1.95.0"
  },
  "icon": "media/logo.png",
  "keywords": [
    "ibmi",
    "as400",
    "db2",
    "database"
  ],
  "categories": [
    "Other"
  ],
  "publisher": "halcyontechltd",
  "author": {
    "name": "Halcyon-Tech, Liam Allan"
  },
  "repository": {
    "url": "https://github.com/halcyon-tech/vscode-db2i"
  },
  "activationEvents": [
    "onStartupFinished",
    "onLanguage:sql"
  ],
  "extensionDependencies": [
    "halcyontechltd.code-for-ibmi"
  ],
  "main": "./dist/extension.js",
  "scripts": {
    "test": "vitest",
    "dsc": "npx tsx src/dsc",
    "package": "vsce package",
    "vscode:prepublish": "rm -rf dist && npm run webpack && npm run dsc",
    "webpack": "vscd --clean && webpack --mode development",
    "webpack-dev": "vscd --clean && webpack --mode development",
    "typings": "npx -p typescript tsc ./src/extension.ts --excludeDirectories '**/node_modules' --allowJs --noEmit --esModuleInterop -t es2019 --moduleResolution node --skipLibCheck"
  },
  "contributes": {
    "configuration": [
      {
        "id": "vscode-db2i",
        "title": "General",
        "order": 0,
        "properties": {
          "vscode-db2i.pageSize": {
            "type": "number",
            "description": "Page size for Schema browser",
            "default": 500
          },
          "vscode-db2i.alwaysStartSQLJob": {
            "type": "string",
            "description": "Name of configuration to use when auto starting a job. 'new' for brand new default job, 'ask' to be asked, 'never' to never start, or a name of a stored configuration",
            "default": "ask"
          },
          "vscode-db2i.jobConfigs": {
            "type": "object",
            "description": "Saved configs for",
            "default": {},
            "additionalProperties": true
          }
        }
      },
      {
        "id": "vscode-db2i.sqlFormat",
        "title": "SQL Formatting",
        "properties": {
          "vscode-db2i.sqlFormat.identifierCase": {
            "type": "string",
            "description": "SQL identifiers",
            "default": "preserve",
            "enum": [
              "lower",
              "upper",
              "preserve"
            ],
            "enumDescriptions": [
              "Format SQL identifiers in lowercase",
              "Format SQL identifiers in uppercase",
              "Preserve the current formatting of SQL identifiers"
            ]
          },
          "vscode-db2i.sqlFormat.keywordCase": {
            "type": "string",
            "description": "SQL keywords",
            "default": "lower",
            "enum": [
              "lower",
              "upper"
            ],
            "enumDescriptions": [
              "Format reserved SQL keywords in lowercase",
              "Format reserved SQL keywords in uppercase"
            ]
          }
        }
      },
      {
        "id": "vscode-db2i.ai",
        "title": "AI integrations",
        "properties": {
          "vscode-db2i.ai.useSchemaDefinition": {
            "type": "boolean",
            "description": "Provide Schema definition as additional context in Continue and Copilot",
            "default": true
          }
        }
      },
      {
        "id": "vscode-db2i.resultsets",
        "title": "Viewing Data",
        "properties": {
          "vscode-db2i.resultsets.columnHeadings": {
            "type": "string",
            "order": 0,
            "description": "Descriptor to use for column headings when viewing data",
            "default": "Name",
            "enum": [
              "Name",
              "Label"
            ],
            "enumDescriptions": [
              "Show the column name",
              "Show the column label\n'Extended metadata' must be set to true in the JDBC configuration"
            ]
          },
          "vscode-db2i.collapsedResultSet": {
            "type": "boolean",
            "description": "Make larger cells collapsed by default",
            "default": false
          }
        }
      },
      {
        "id": "vscode-db2i.codegen",
        "title": "Code generation",
        "properties": {
          "vscode-db2i.codegen.rpgSymbolicNameSource": {
            "type": "string",
            "order": 0,
            "description": "Descriptor to use for RPG symbolic names in data structure",
            "default": "Name",
            "enum": [
              "Name",
              "Label"
            ],
            "enumDescriptions": [
              "Use the column name",
              "Use the column label\n'Extended metadata' must be set to true in the JDBC configuration"
            ]
          },
          "vscode-db2i.codegen.csvColumnDelimiter": {
            "type": "string",
            "description": "Delimiter",
            "default": "Comma",
            "enum": [
              "Comma",
              "Semicolon",
              "Tab"
            ]
          }
        }
      },
      {
        "id": "vscode-db2i.visualExplain",
        "title": "Visual Explain",
        "properties": {
          "vscode-db2i.visualExplain.highlighting": {
            "type": "object",
            "properties": {
              "Index Advised": {
                "type": "boolean",
                "default": true
              },
              "Actual Number of Rows": {
                "type": "boolean",
                "default": true
              },
              "Actual Processing Time": {
                "type": "boolean",
                "default": true
              },
              "Estimated Number of Rows": {
                "type": "boolean",
                "default": true
              },
              "Estimated Processing Time": {
                "type": "boolean",
                "default": true
              },
              "Lookahead Predicate Generation (LPG)": {
                "type": "boolean",
                "default": true
              },
              "Materialized Query Table (MQT)": {
                "type": "boolean",
                "default": true
              }
            },
            "default": {
              "Index Advised": true,
              "Actual Number of Rows": true,
              "Actual Processing Time": true,
              "Estimated Number of Rows": true,
              "Estimated Processing Time": true,
              "Lookahead Predicate Generation (LPG)": true,
              "Materialized Query Table (MQT)": true
            },
            "additionalProperties": false,
            "description": "Highlight expensive operations in the graph to aid in identifying potential problems with the query."
          }
        }
      },
      {
        "id": "vscode-db2i.jobManager",
        "title": "SQL Job Manager",
        "properties": {
          "vscode-db2i.jobManager.jobNamingDefault": {
            "type": "string",
            "order": 0,
            "description": "Default naming mode for new jobs",
            "default": "system",
            "enum": [
              "system",
              "sql"
            ]
          },
          "vscode-db2i.jobManager.jobSelfDefault": {
            "type": "string",
            "order": 1,
            "description": "Default SELF setting for new jobs",
            "default": "*NONE",
            "enum": [
              "*NONE",
              "*ALL",
              "*ERROR",
              "*WARNING"
            ]
          }
        }
      },
      {
        "id": "vscode-db2i.self",
        "title": "SQL Error Logging Facility (SELF)",
        "properties": {
          "vscode-db2i.jobSelfViewAutoRefresh": {
            "type": "boolean",
            "title": "Auto-refresh SELF Codes view",
            "description": "Enable auto-refresh for SELF Codes view when connecting to a system",
            "default": false
          }
        }
      },
      {
        "id": "vscode-db2i.syntax",
        "title": "SQL Syntax Options",
        "properties": {
          "vscode-db2i.syntax.checkOnOpen": {
            "type": "boolean",
            "description": "If enabled, will check the syntax of the SQL file when it is opened",
            "default": false
          },
          "vscode-db2i.syntax.checkOnEdit": {
            "type": "boolean",
            "description": "Whether the syntax checker should run automatically when the document is edited",
            "default": true
          },
          "vscode-db2i.syntax.checkInterval": {
            "type": "number",
            "description": "Time between editing (ms) and sending a request to syntax check on the server",
            "default": 1500
          },
          "vscode-db2i.syntax.showWarnings": {
            "type": "boolean",
            "description": "Whether SQL syntax warnings should show in the editor",
            "default": false
          },
          "vscode-db2i.syntax.useSystemNames": {
            "type": "boolean",
            "description": "Whether to use system names for columns in the content assist",
            "default": false
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "db2-explorer",
          "title": "Db2 for i",
          "icon": "$(database)"
        }
      ],
      "panel": [
        {
          "id": "ibmi-panel",
          "title": "IBM i",
          "icon": "$(search)"
        }
      ]
    },
    "views": {
      "db2-explorer": [
        {
          "id": "testingView-db2i",
          "name": "Test cases",
          "when": "code-for-ibmi:connected && vscode-db2i:testing"
        },
        {
          "id": "schemaBrowser",
          "name": "Schema Browser",
          "visibility": "visible",
          "when": "code-for-ibmi:connected == true"
        },
        {
          "id": "queryHistory",
          "name": "Statement History",
          "visibility": "visible",
          "when": "code-for-ibmi:connected == true && vscode-db2i:jobManager.hasJob"
        },
        {
          "id": "jobManager",
          "name": "SQL Job Manager",
          "when": "code-for-ibmi:connected && vscode-db2i:jobManager"
        },
        {
          "id": "exampleBrowser",
          "name": "Examples",
          "visibility": "collapsed",
          "when": "code-for-ibmi:connected == true"
        }
      ],
      "ibmi-panel": [
        {
          "type": "webview",
          "id": "vscode-db2i.resultset",
          "name": "Results",
          "when": "code-for-ibmi:connected == true",
          "contextualTitle": "DB2 for i"
        },
        {
          "type": "tree",
          "id": "vscode-db2i.dove.nodes",
          "name": "Visual Explain",
          "when": "code-for-ibmi:connected && vscode-db2i:explaining == true",
          "contextualTitle": "DB2 for i"
        },
        {
          "type": "tree",
          "id": "vscode-db2i.dove.node",
          "name": "Visual Explain Details",
          "when": "code-for-ibmi:connected && vscode-db2i:explainingNode == true"
        },
        {
          "type": "tree",
          "id": "vscode-db2i.self.nodes",
          "name": "SQL Error Logging Facility (SELF)",
          "when": "code-for-ibmi:connected && vscode-db2i:SELFSupported && vscode-db2i:jobManager == true",
          "visibility": "collapsed"
        }
      ]
    },
    "commands": [
      {
        "command": "vscode-db2i.json.pasteGenerator",
        "title": "Paste JSON as SQL",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.json.pasteParser",
        "title": "Generate JSON SQL parser",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.getStatementUri",
        "title": "Copy sharable statement URI",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.refreshSchemaBrowser",
        "title": "Refresh Schema Browser",
        "category": "Db2 for i",
        "icon": "$(refresh)"
      },
      {
        "command": "vscode-db2i.manageSchemaBrowserList",
        "title": "Manage Schema Browser List",
        "category": "Db2 for i",
        "icon": "$(list-selection)"
      },
      {
        "command": "vscode-db2i.removeSchemaFromSchemaBrowser",
        "title": "Remove schema from view",
        "category": "Db2 for i",
        "icon": "$(remove)"
      },
      {
        "command": "vscode-db2i.generateSQL",
        "title": "Generate SQL",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.getRelatedObjects",
        "title": "Get Related Objects",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.getMTIs",
        "title": "Get MTIs",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.getIndexes",
        "title": "Get Indexes",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.getAuthorities",
        "title": "Get Authorities",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.getObjectLocks",
        "title": "Get Object Locks",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.getRecordLocks",
        "title": "Get Record Locks",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.clearData",
        "title": "Clear...",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.copyData",
        "title": "Copy Data...",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.deleteObject",
        "title": "Delete...",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.renameObject",
        "title": "Rename...",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.advisedIndexes",
        "title": "Advised Indexes",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.clearAdvisedIndexes",
        "title": "Clear All Advised Indexes...",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.getResultSet",
        "title": "View contents",
        "category": "Db2 for i",
        "icon": "$(output)"
      },
      {
        "command": "vscode-db2i.setSchemaFilter",
        "title": "Set filter",
        "category": "Db2 for i",
        "icon": "$(search)"
      },
      {
        "command": "vscode-db2i.viewPermissions",
        "title": "View permissions",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.runEditorStatement",
        "title": "Run statement",
        "category": "Db2 for i",
        "icon": "$(notebook-execute)"
      },
      {
        "command": "vscode-db2i.runEditorStatement.inView",
        "title": "Run statement in new view",
        "category": "Db2 for i",
        "icon": "$(window)"
      },
      {
        "command": "vscode-db2i.runEditorStatement.multiple.all",
        "title": "Run all statements",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.runEditorStatement.multiple.selected",
        "title": "Run selected statements",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.runEditorStatement.multiple.from",
        "title": "Run statements from cursor",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.statement.cancel",
        "title": "Cancel",
        "category": "Db2 for i",
        "icon": "$(stop)"
      },
      {
        "command": "vscode-db2i.editorExplain.withRun",
        "title": "Run and explain statement",
        "category": "Db2 for i",
        "icon": "$(debug-alt)"
      },
      {
        "command": "vscode-db2i.editorExplain.withoutRun",
        "title": "Explain without running",
        "category": "Db2 for i",
        "icon": "$(debug-alt)"
      },
      {
        "command": "vscode-db2i.resultset.settings",
        "title": "Settings",
        "category": "Db2 for i",
        "icon": "$(gear)"
      },
      {
        "command": "vscode-db2i.dove.close",
        "title": "Close",
        "category": "Db2 for i",
        "icon": "$(close)"
      },
      {
        "command": "vscode-db2i.dove.displayDetails",
        "title": "Display details",
        "category": "Db2 for i",
        "icon": "$(info)"
      },
      {
        "command": "vscode-db2i.dove.generateSqlForAdvisedIndexes",
        "title": "Generate SQL for Advised Indexes",
        "category": "Db2 for i",
        "icon": "$(go-to-file)"
      },
      {
        "command": "vscode-db2i.dove.closeDetails",
        "title": "Close",
        "category": "Db2 for i",
        "icon": "$(close)"
      },
      {
        "command": "vscode-db2i.dove.advisedIndexesAndStatistics",
        "title": "Advised Indexes and Statistics",
        "category": "Db2 for i",
        "icon": "$(lightbulb)"
      },
      {
        "command": "vscode-db2i.dove.editSettings",
        "title": "Settings",
        "category": "Db2 for i",
        "icon": "$(gear)"
      },
      {
        "command": "vscode-db2i.dove.export",
        "title": "Export current VE data",
        "category": "Db2 for i",
        "icon": "$(file)"
      },
      {
        "command": "vscode-db2i.dove.node.copy",
        "title": "Copy value",
        "category": "Db2 for i",
        "icon": "$(pencil)"
      },
      {
        "command": "vscode-db2i.queryHistory.remove",
        "title": "Remove statement from history",
        "category": "Db2 for i",
        "icon": "$(trash)"
      },
      {
        "command": "vscode-db2i.queryHistory.clear",
        "title": "Clear statement history",
        "category": "Db2 for i",
        "icon": "$(trash)"
      },
      {
        "command": "vscode-db2i.queryHistory.find",
        "title": "Search query history",
        "category": "Db2 for i",
        "icon": "$(search)"
      },
      {
        "command": "vscode-db2i.queryHistory.toggleStar",
        "title": "Star statement",
        "category": "Db2 for i",
        "icon": "$(star)"
      },
      {
        "command": "vscode-db2i.openSqlDocument",
        "title": "Open SQL Document",
        "category": "Db2 for i",
        "icon": "$(new-file)"
      },
      {
        "command": "vscode-db2i.notebook.open",
        "title": "New Notebook",
        "category": "IBM i Notebooks",
        "enablement": "code-for-ibmi:connected == true",
        "icon": "$(notebook)"
      },
      {
        "command": "vscode-db2i.jobManager.newJob",
        "title": "New SQL Job",
        "category": "Db2 for i",
        "icon": "$(database)"
      },
      {
        "command": "vscode-db2i.jobManager.closeJob",
        "title": "Close SQL Job",
        "category": "Db2 for i",
        "icon": "$(trash)"
      },
      {
        "command": "vscode-db2i.jobManager.endAll",
        "title": "Close All SQL Jobs",
        "category": "Db2 for i",
        "icon": "$(clear-all)"
      },
      {
        "command": "vscode-db2i.jobManager.editJobProps",
        "title": "Edit Connection Properties",
        "category": "Db2 for i",
        "icon": "$(edit)"
      },
      {
        "command": "vscode-db2i.jobManager.defaultSettings",
        "title": "Default Job Settings",
        "category": "Db2 for i",
        "icon": "$(gear)"
      },
      {
        "command": "vscode-db2i.jobManager.editSelfCodes",
        "title": "Set logging level for SELF",
        "category": "Db2 for i",
        "icon": "$(bracket-error)"
      },
      {
        "command": "vscode-db2i.jobManager.copyJobId",
        "title": "Copy Job Name",
        "category": "Db2 for i",
        "icon": "$(keyboard)"
      },
      {
        "command": "vscode-db2i.jobManager.viewJobLog",
        "title": "View Job Log",
        "category": "Db2 for i",
        "icon": "$(info)"
      },
      {
        "command": "vscode-db2i.jobManager.enableTracing",
        "title": "Enable Tracing",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.jobManager.getTrace",
        "title": "Get Trace Data",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.jobManager.newConfig",
        "title": "Save settings to config",
        "category": "Db2 for i",
        "icon": "$(save)"
      },
      {
        "command": "vscode-db2i.jobManager.editConfig",
        "title": "Edit configuration",
        "category": "Db2 for i",
        "icon": "$(edit)"
      },
      {
        "command": "vscode-db2i.jobManager.deleteConfig",
        "title": "Delete configuration",
        "category": "Db2 for i",
        "icon": "$(trash)"
      },
      {
        "command": "vscode-db2i.jobManager.focusContinue",
        "title": "Register Continue Provider",
        "category": "Db2 for i",
        "icon": "$(star-full)",
        "enablement": "vscode-db2i:continueExtensionActive"
      },
      {
        "command": "vscode-db2i.self.refresh",
        "title": "Refresh SELF Codes View",
        "category": "Db2 for i",
        "icon": "$(refresh)"
      },
      {
        "command": "vscode-db2i.self.enableAutoRefresh",
        "title": "Enable Auto Refresh",
        "category": "Db2 for i",
        "icon": "$(sync)"
      },
      {
        "command": "vscode-db2i.self.disableAutoRefresh",
        "title": "Disable Auto Refresh",
        "category": "Db2 for i",
        "icon": "$(sync-ignored)"
      },
      {
        "command": "vscode-db2i.self.enableSelectedJobOnly",
        "title": "Show Selected Job Only",
        "category": "Db2 for i",
        "icon": "$(filter)"
      },
      {
        "command": "vscode-db2i.self.disableSelectedJobOnly",
        "title": "Show errors for user (all jobs)",
        "category": "Db2 for i",
        "icon": "$(account)"
      },
      {
        "command": "vscode-db2i.self.reset",
        "title": "Reset SELF Codes View",
        "category": "Db2 for i",
        "icon": "$(trash)"
      },
      {
        "command": "vscode-db2i.self.copySqlStatement",
        "title": "Copy SQL statement",
        "category": "Db2 for i",
        "icon": "$(pencil)"
      },
      {
        "command": "vscode-db2i.self.displayDetails",
        "title": "Display SELF Code Details",
        "category": "Db2 for i",
        "icon": "$(info)"
      },
      {
        "command": "vscode-db2i.self.explainSelf",
        "title": "Explain SELF Code with continue",
        "category": "Db2 for i",
        "icon": "$(debug-alt)",
        "enablement": "vscode-db2i:continueExtensionActive"
      },
      {
        "command": "vscode-db2i.self.help",
        "title": "Open SELF Documentation",
        "category": "Db2 for i",
        "icon": "$(question)"
      },
      {
        "command": "vscode-db2i.examples.setFilter",
        "title": "Set filter",
        "category": "Db2 for i (Examples)",
        "icon": "$(filter)"
      },
      {
        "command": "vscode-db2i.examples.clearFilter",
        "title": "Clear filter",
        "category": "Db2 for i (Examples)",
        "icon": "$(clear-all)"
      },
      {
        "command": "vscode-db2i.notebook.fromSqlUri",
        "title": "Open as Notebook",
        "category": "IBM i Notebooks",
        "icon": "$(notebook)"
      },
      {
        "command": "vscode-db2i.notebook.exportAsHtml",
        "title": "Export",
        "category": "IBM i Notebooks",
        "icon": "$(save)"
      },
      {
        "command": "vscode-db2i.syntax.checkDocument",
        "title": "Check SQL syntax",
        "category": "Db2 for IBM i",
        "enablement": "code-for-ibmi:connected == true && vscode-db2i:jobManager.hasJob && vscode-db2i:statementCanCancel != true && vscode-db2i.syntax.checkerAvailable == true && vscode-db2i.syntax.checkerRunning != true",
        "icon": "$(check-all)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-db2i.getStatementUri",
          "when": "editorLangId == sql"
        },
        {
          "command": "vscode-db2i.setSchemaFilter",
          "when": "never"
        },
        {
          "command": "vscode-db2i.generateSQL",
          "when": "never"
        },
        {
          "command": "vscode-db2i.getRelatedObjects",
          "when": "never"
        },
        {
          "command": "vscode-db2i.getMTIs",
          "when": "never"
        },
        {
          "command": "vscode-db2i.getIndexes",
          "when": "never"
        },
        {
          "command": "vscode-db2i.getAuthorities",
          "when": "never"
        },
        {
          "command": "vscode-db2i.getObjectLocks",
          "when": "never"
        },
        {
          "command": "vscode-db2i.getRecordLocks",
          "when": "never"
        },
        {
          "command": "vscode-db2i.clearData",
          "when": "never"
        },
        {
          "command": "vscode-db2i.copyData",
          "when": "never"
        },
        {
          "command": "vscode-db2i.deleteObject",
          "when": "never"
        },
        {
          "command": "vscode-db2i.renameObject",
          "when": "never"
        },
        {
          "command": "vscode-db2i.advisedIndexes",
          "when": "never"
        },
        {
          "command": "vscode-db2i.clearAdvisedIndexes",
          "when": "never"
        },
        {
          "command": "vscode-db2i.resultset.settings",
          "when": "never"
        },
        {
          "command": "vscode-db2i.dove.displayDetails",
          "when": "never"
        },
        {
          "command": "vscode-db2i.dove.advisedIndexesAndStatistics",
          "when": "vscode-db2i:explaining == true"
        },
        {
          "command": "vscode-db2i.dove.editSettings",
          "when": "vscode-db2i:explaining == true"
        },
        {
          "command": "vscode-db2i.dove.export",
          "when": "vscode-db2i:explaining == true"
        },
        {
          "command": "vscode-db2i.dove.node.copy",
          "when": "never"
        },
        {
          "command": "vscode-db2i.queryHistory.remove",
          "when": "never"
        },
        {
          "command": "vscode-db2i.queryHistory.find",
          "when": "never"
        },
        {
          "command": "vscode-db2i.queryHistory.toggleStar",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.closeJob",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.editJobProps",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.editSelfCodes",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.copyJobId",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.viewJobLog",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.enableTracing",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.getTrace",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.newConfig",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.editConfig",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.deleteConfig",
          "when": "never"
        },
        {
          "command": "vscode-db2i.notebook.fromSqlUri",
          "when": "never"
        }
      ],
      "editor/context": [
        {
          "command": "vscode-db2i.getStatementUri",
          "group": "sql@0",
          "when": "editorLangId == sql"
        },
        {
          "command": "vscode-db2i.json.pasteGenerator",
          "group": "sql@1",
          "when": "editorLangId == sql"
        },
        {
          "command": "vscode-db2i.json.pasteParser",
          "group": "sql@2",
          "when": "editorLangId == sql"
        }
      ],
      "view/title": [
        {
          "command": "vscode-db2i.refreshSchemaBrowser",
          "group": "navigation",
          "when": "view == schemaBrowser"
        },
        {
          "command": "vscode-db2i.manageSchemaBrowserList",
          "group": "navigation",
          "when": "view == schemaBrowser && vscode-db2i:manageSchemaBrowserEnabled"
        },
        {
          "command": "vscode-db2i.resultset.settings",
          "group": "navigation",
          "when": "view == vscode-db2i.resultset"
        },
        {
          "command": "vscode-db2i.dove.advisedIndexesAndStatistics",
          "group": "navigation@0",
          "when": "view == vscode-db2i.dove.nodes"
        },
        {
          "command": "vscode-db2i.dove.editSettings",
          "group": "navigation@1",
          "when": "view == vscode-db2i.dove.nodes"
        },
        {
          "command": "vscode-db2i.dove.export",
          "group": "navigation@2",
          "when": "view == vscode-db2i.dove.nodes"
        },
        {
          "command": "vscode-db2i.dove.close",
          "group": "navigation@3",
          "when": "view == vscode-db2i.dove.nodes"
        },
        {
          "command": "vscode-db2i.dove.generateSqlForAdvisedIndexes",
          "group": "navigation@0",
          "when": "view == vscode-db2i.dove.node && vscode-db2i:viewingAdvisedIndexes"
        },
        {
          "command": "vscode-db2i.dove.closeDetails",
          "group": "navigation@1",
          "when": "view == vscode-db2i.dove.node"
        },
        {
          "command": "vscode-db2i.queryHistory.clear",
          "group": "navigation",
          "when": "view == queryHistory"
        },
        {
          "command": "vscode-db2i.queryHistory.find",
          "group": "navigation",
          "when": "view == queryHistory"
        },
        {
          "command": "vscode-db2i.jobManager.newJob",
          "group": "navigation@1",
          "when": "view == jobManager"
        },
        {
          "command": "vscode-db2i.jobManager.defaultSettings",
          "group": "navigation",
          "when": "view == jobManager"
        },
        {
          "command": "vscode-db2i.jobManager.endAll",
          "group": "navigation@2",
          "when": "view == jobManager"
        },
        {
          "command": "vscode-db2i.openSqlDocument",
          "group": "navigation@3",
          "when": "view == jobManager"
        },
        {
          "command": "vscode-db2i.notebook.open",
          "group": "navigation@4",
          "when": "view == jobManager"
        },
        {
          "command": "vscode-db2i.self.refresh",
          "group": "navigation@1",
          "when": "view == vscode-db2i.self.nodes && vscode-db2i:jobManager.hasJob"
        },
        {
          "command": "vscode-db2i.self.enableAutoRefresh",
          "group": "navigation@2",
          "when": "view == vscode-db2i.self.nodes && vscode-db2i.self.autoRefresh == false"
        },
        {
          "command": "vscode-db2i.self.disableAutoRefresh",
          "group": "navigation@2",
          "when": "view == vscode-db2i.self.nodes && vscode-db2i.self.autoRefresh == true"
        },
        {
          "command": "vscode-db2i.self.enableSelectedJobOnly",
          "group": "navigation@2",
          "when": "view == vscode-db2i.self.nodes && vscode-db2i.self.specificJob == false"
        },
        {
          "command": "vscode-db2i.self.disableSelectedJobOnly",
          "group": "navigation@2",
          "when": "view == vscode-db2i.self.nodes && vscode-db2i.self.specificJob == true"
        },
        {
          "command": "vscode-db2i.self.reset",
          "group": "navigation@3",
          "when": "view == vscode-db2i.self.nodes && vscode-db2i:jobManager.hasJob"
        },
        {
          "command": "vscode-db2i.self.help",
          "group": "navigation@4",
          "when": "view == vscode-db2i.self.nodes"
        },
        {
          "command": "vscode-db2i.examples.setFilter",
          "group": "navigation",
          "when": "view == exampleBrowser"
        },
        {
          "command": "vscode-db2i.examples.clearFilter",
          "group": "navigation",
          "when": "view == exampleBrowser"
        }
      ],
      "view/item/context": [
        {
          "command": "vscode-db2i.setSchemaFilter",
          "when": "viewItem == schema",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.getResultSet",
          "when": "viewItem == table || viewItem == view || viewItem == alias",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.generateSQL",
          "when": "viewItem == table || viewItem == view || viewItem == alias || viewItem == constraint || viewItem == function || viewItem == variable || viewItem == index || viewItem == procedure || viewItem == sequence || viewItem == package || viewItem == trigger || viewItem == type",
          "group": "db2@2"
        },
        {
          "command": "vscode-db2i.removeSchemaFromSchemaBrowser",
          "when": "view == schemaBrowser && viewItem == schema",
          "group": "db2@3"
        },
        {
          "command": "vscode-db2i.getRelatedObjects",
          "when": "viewItem == table",
          "group": "db2workWith@1"
        },
        {
          "command": "vscode-db2i.getIndexes",
          "when": "viewItem == table",
          "group": "db2workWith@2"
        },
        {
          "command": "vscode-db2i.getMTIs",
          "when": "viewItem == table || viewItem == schema",
          "group": "db2workWith@3"
        },
        {
          "command": "vscode-db2i.getAuthorities",
          "when": "viewItem == table || viewItem == view || viewItem == alias || viewItem == constraint || viewItem == function || viewItem == variable || viewItem == index || viewItem == procedure || viewItem == sequence || viewItem == package || viewItem == trigger || viewItem == type",
          "group": "db2workWith@4"
        },
        {
          "command": "vscode-db2i.getObjectLocks",
          "when": "viewItem == table || viewItem == view || viewItem == alias || viewItem == function || viewItem == variable || viewItem == index || viewItem == procedure || viewItem == sequence || viewItem == package || viewItem == trigger || viewItem == type",
          "group": "db2workWith@5"
        },
        {
          "command": "vscode-db2i.getRecordLocks",
          "when": "viewItem == table",
          "group": "db2workWith@6"
        },
        {
          "command": "vscode-db2i.clearData",
          "when": "viewItem == table",
          "group": "db2data@1"
        },
        {
          "command": "vscode-db2i.copyData",
          "when": "viewItem == table || viewItem == view",
          "group": "db2data@2"
        },
        {
          "command": "vscode-db2i.deleteObject",
          "when": "viewItem == table || viewItem == view || viewItem == alias || viewItem == constraint || viewItem == function || viewItem == variable || viewItem == index || viewItem == procedure || viewItem == sequence || viewItem == package || viewItem == trigger || viewItem == type",
          "group": "db2data@3"
        },
        {
          "command": "vscode-db2i.renameObject",
          "when": "viewItem == table || viewItem == view || viewItem == index",
          "group": "db2data@4"
        },
        {
          "command": "vscode-db2i.viewPermissions",
          "when": "viewItem == table || viewItem == view || viewItem == alias || viewItem == function || viewItem == variable || viewItem == index || viewItem == procedure || viewItem == sequence || viewItem == package || viewItem == trigger || viewItem == type",
          "group": "db2data@5"
        },
        {
          "command": "vscode-db2i.advisedIndexes",
          "when": "viewItem == table || viewItem == schema",
          "group": "db2idxAdv@1"
        },
        {
          "command": "vscode-db2i.clearAdvisedIndexes",
          "when": "viewItem == table || viewItem == schema",
          "group": "db2idxAdv@2"
        },
        {
          "command": "vscode-db2i.dove.displayDetails",
          "when": "view == vscode-db2i.dove.nodes && viewItem == explainTreeItem",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.dove.node.copy",
          "when": "view == vscode-db2i.dove.node && viewItem == propertyNode"
        },
        {
          "command": "vscode-db2i.queryHistory.remove",
          "when": "view == queryHistory && viewItem == query",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.queryHistory.toggleStar",
          "when": "view == queryHistory && viewItem == query",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.jobManager.closeJob",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.jobManager.editJobProps",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.jobManager.editSelfCodes",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "self@2"
        },
        {
          "command": "vscode-db2i.jobManager.copyJobId",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.jobManager.viewJobLog",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.jobManager.enableTracing",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "trace@1"
        },
        {
          "command": "vscode-db2i.jobManager.getTrace",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "trace@2"
        },
        {
          "command": "vscode-db2i.jobManager.newConfig",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "config@1"
        },
        {
          "command": "vscode-db2i.jobManager.editConfig",
          "when": "view == jobManager && viewItem == savedConfig",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.jobManager.deleteConfig",
          "when": "view == jobManager && viewItem == savedConfig",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.self.copySqlStatement",
          "when": "view == vscode-db2i.self.nodes && viewItem == selfCodeNode",
          "group": "navigation"
        },
        {
          "command": "vscode-db2i.self.displayDetails",
          "when": "view == vscode-db2i.self.nodes && viewItem == selfCodeNode",
          "group": "navigation"
        },
        {
          "command": "vscode-db2i.self.explainSelf",
          "when": "view == vscode-db2i.self.nodes && viewItem == selfCodeNode && vscode-db2i:continueExtensionActive",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "when": "editorLangId == sql && code-for-ibmi:connected == true && vscode-db2i:statementCanCancel != true",
          "group": "navigation@1",
          "submenu": "sql/editor/context"
        },
        {
          "command": "vscode-db2i.statement.cancel",
          "when": "editorLangId == sql && vscode-db2i:statementCanCancel == true",
          "group": "navigation@1"
        },
        {
          "command": "vscode-db2i.syntax.checkDocument",
          "when": "editorLangId == sql && code-for-ibmi:connected == true",
          "group": "navigation"
        }
      ],
      "sql/editor/context": [
        {
          "command": "vscode-db2i.runEditorStatement",
          "when": "editorLangId == sql && vscode-db2i:statementCanCancel != true",
          "group": "navigation@1"
        },
        {
          "command": "vscode-db2i.runEditorStatement.inView",
          "when": "editorLangId == sql && vscode-db2i:statementCanCancel != true",
          "group": "navigation@2"
        },
        {
          "command": "vscode-db2i.runEditorStatement.multiple.all",
          "when": "editorLangId == sql && vscode-db2i:statementCanCancel != true",
          "group": "navigation_multiple@1"
        },
        {
          "command": "vscode-db2i.runEditorStatement.multiple.selected",
          "when": "editorLangId == sql && vscode-db2i:statementCanCancel != true && editorHasSelection",
          "group": "navigation_multiple@2"
        },
        {
          "command": "vscode-db2i.runEditorStatement.multiple.from",
          "when": "editorLangId == sql && vscode-db2i:statementCanCancel != true && !editorHasSelection",
          "group": "navigation_multiple@2"
        },
        {
          "command": "vscode-db2i.editorExplain.withRun",
          "when": "editorLangId == sql",
          "group": "navigation_explain@1"
        },
        {
          "command": "vscode-db2i.editorExplain.withoutRun",
          "when": "editorLangId == sql",
          "group": "navigation_explain@2"
        },
        {
          "command": "vscode-db2i.notebook.fromSqlUri",
          "when": "editorLangId == sql",
          "group": "navigation_notebook@1"
        }
      ],
      "notebook/toolbar": [
        {
          "command": "vscode-db2i.notebook.exportAsHtml",
          "when": "code-for-ibmi:connected == true && resourceExtname == .inb",
          "group": "navigation"
        }
      ]
    },
    "submenus": [
      {
        "icon": "$(notebook-execute)",
        "id": "sql/editor/context",
        "label": "Run SQL statement"
      }
    ],
    "keybindings": [
      {
        "command": "vscode-db2i.runEditorStatement",
        "key": "ctrl+r",
        "mac": "cmd+r",
        "when": "editorLangId == sql && resourceExtname != .inb"
      },
      {
        "command": "vscode-db2i.runEditorStatement.inView",
        "key": "ctrl+alt+r",
        "mac": "cmd+ctrl+r",
        "when": "editorLangId == sql"
      },
      {
        "command": "vscode-db2i.editorExplain.withRun",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r",
        "when": "editorLangId == sql && resourceExtname != .inb"
      },
      {
        "command": "vscode-db2i.editorExplain.withoutRun",
        "key": "ctrl+alt+r",
        "mac": "cmd+alt+r",
        "when": "editorLangId == sql && resourceExtname != .inb"
      },
      {
        "command": "notebook.cell.execute",
        "key": "ctrl+r",
        "mac": "cmd+r",
        "when": "editorLangId == sql && resourceExtname == .inb"
      }
    ],
    "colors": [
      {
        "id": "db2i.dove.resultsView.HighlightIndexAdvised",
        "description": "Highlight color for index advised",
        "defaults": {
          "dark": "#8c8cbd",
          "light": "#8c8cbd"
        }
      },
      {
        "id": "db2i.dove.resultsView.HighlightActualExpensiveRows",
        "description": "Highlight color for actual expensive rows",
        "defaults": {
          "dark": "#cc9933",
          "light": "#cc9933"
        }
      },
      {
        "id": "db2i.dove.resultsView.HighlightEstimatedExpensiveRows",
        "description": "Highlight color for estimated expensive rows",
        "defaults": {
          "dark": "#dbdb01",
          "light": "#a0a001"
        }
      },
      {
        "id": "db2i.dove.resultsView.HighlightActualExpensiveTime",
        "description": "Highlight color for actual expensive time",
        "defaults": {
          "dark": "#bc0f0f",
          "light": "#bc0f0f"
        }
      },
      {
        "id": "db2i.dove.resultsView.HighlightEstimatedExpensiveTime",
        "description": "Highlight color for estimated expensive time",
        "defaults": {
          "dark": "#f2bdbd",
          "light": "#f2bdbd"
        }
      },
      {
        "id": "db2i.dove.resultsView.HighlightLookaheadPredicateGeneration",
        "description": "Highlight color for Lookahead Predicate Generation",
        "defaults": {
          "dark": "#00ff00",
          "light": "#00ff00"
        }
      },
      {
        "id": "db2i.dove.resultsView.HighlightMaterializedQueryTable",
        "description": "Highlight color for Materialized Query Table",
        "defaults": {
          "dark": "#ff8400",
          "light": "#ff8400"
        }
      },
      {
        "id": "db2i.dove.resultsView.HighlightRefreshedNode",
        "description": "Highlight color for refreshed node",
        "defaults": {
          "dark": "#00ffff",
          "light": "#00ffff"
        }
      },
      {
        "id": "db2i.dove.nodeView.AttributeSectionHeading",
        "description": "Color for attributes section heading",
        "defaults": {
          "dark": "#bd8c8c",
          "light": "#5976df"
        }
      }
    ],
    "viewsWelcome": [
      {
        "view": "queryHistory",
        "contents": "Statement history will appear here."
      },
      {
        "view": "jobManager",
        "contents": "The SQL Job Manager allows you to provision one or more jobs for running SQL statements, each with its own connection settings.\n\nUsing managed jobs reduces the use of system resources, improves performance, and maintains  state across subsequent SQL statements.\n\nYou can run SQL statements without starting a job, just be aware that every statement you run requires a temporary, single-use job to be started on your behalf. \n[New SQL job](command:vscode-db2i.jobManager.newJob)"
      },
      {
        "view": "vscode-db2i.self.nodes",
        "contents": "🛠️ SELF Codes will appear here. You can set the SELF log level on specific jobs, or you can set the default for new jobs in the User Settings.\n\n[Set Default for New Jobs](command:vscode-db2i.jobManager.defaultSettings)\n\n[Learn about SELF](command:vscode-db2i.self.help)"
      }
    ],
    "notebooks": [
      {
        "id": "db2i-notebook",
        "type": "db2i-notebook",
        "displayName": "IBM i Notebook",
        "selector": [
          {
            "filenamePattern": "*.inb"
          }
        ]
      }
    ],
    "chatParticipants": [
      {
        "id": "vscode-db2i.chat",
        "name": "db2i",
        "fullName": "Db2 for i",
        "description": "Chat with the Db2 for i AI assistant",
        "isSticky": true,
        "commands": [
          {
            "name": "build",
            "description": "Build an SQL statement"
          }
        ]
      }
    ],
    "languageModelTools": [
      {
        "name": "vscode-db2i-chat-sqlRunnerTool",
        "tags": [
          "sql"
        ],
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "result",
        "displayName": "Run SQL statement",
        "icon": "$(play)",
        "modelDescription": "Run an SQL statement and return the result",
        "inputSchema": {
          "type": "object",
          "properties": {
            "statement": {
              "type": "string",
              "description": "The statement to execute"
            }
          },
          "required": [
            "statement"
          ]
        }
      }
    ],
    "snippets": [
      {
        "language": "sql",
        "path": "snippets/http.code-snippets"
      },
      {
        "language": "sql",
        "path": "snippets/create.code-snippets"
      },
      {
        "language": "sql",
        "path": "snippets/scalars.code-snippets"
      },
      {
        "language": "sql",
        "path": "snippets/variables.code-snippets"
      },
      {
        "language": "sql",
        "path": "snippets/aggregates.code-snippets"
      }
    ]
  },
  "devDependencies": {
    "@continuedev/core": "^1.0.13",
    "@halcyontech/vscode-ibmi-types": "^2.15.0",
    "@types/glob": "^7.1.3",
    "@types/node": "18.x",
    "@types/vscode": "^1.95.0",
    "esbuild-loader": "^4.3.0",
    "glob": "^7.1.7",
    "raw-loader": "^4.0.2",
    "ts-loader": "^9.3.1",
    "typescript": "^4.3.2",
    "vitest": "^3.0.7",
    "vscd": "^1.1.0",
    "vscode-test": "^1.5.2",
    "webpack": "^5.91.0",
    "webpack-cli": "^4.5.0"
  },
  "dependencies": {
    "@ibm/mapepire-js": "^0.5.0",
    "@octokit/rest": "^21.1.1",
    "chart.js": "^4.4.2",
    "csv": "^6.1.3",
    "json-to-markdown-table": "^1.0.0",
    "lru-cache": "^6.0.0",
    "node-fetch": "^3.3.1",
    "showdown": "^2.1.0",
    "sql-formatter": "^14.0.0"
  }
}