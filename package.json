{
  "name": "vscode-db2i",
  "displayName": "Db2 for IBM i",
  "description": "Db2 for IBM i tools in VS Code",
  "version": "0.3.0",
  "preview": true,
  "engines": {
    "vscode": "^1.70.0"
  },
  "icon": "media/logo.png",
  "keywords": [
    "ibmi",
    "as400",
    "db2",
    "database"
  ],
  "categories": [
    "Other"
  ],
  "publisher": "halcyontechltd",
  "author": {
    "name": "Halcyon-Tech, Liam Allan"
  },
  "repository": {
    "url": "https://github.com/halcyon-tech/vscode-db2i"
  },
  "activationEvents": [
    "onStartupFinished",
    "onLanguage:sql"
  ],
  "extensionDependencies": [
    "halcyontechltd.code-for-ibmi"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "snippets": [
      {
        "language": "sql",
        "path": "snippets/scalars.code-snippets"
      },
      {
        "language": "sql",
        "path": "snippets/variables.code-snippets"
      },
      {
        "language": "sql",
        "path": "snippets/aggregates.code-snippets"
      }
    ],
    "configuration": {
      "title": "Db2 for IBM i",
      "properties": {
        "vscode-db2i.pageSize": {
          "type": "number",
          "description": "Page size for Schema browser",
          "default": 500
        },
        "vscode-db2i.alwaysStartSQLJob": {
          "type": "string",
          "description": "Name of configuration to use when auto starting a job. 'new' for brand new default job, 'ask' to be asked, 'never' to never start, or a name of a stored configuration",
          "default": "ask"
        },
        "vscode-db2i.jobConfigs": {
          "type": "object",
          "description": "Saved configs for",
          "default": {},
          "additionalProperties": true
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "db2-explorer",
          "title": "Db2 for i",
          "icon": "$(database)"
        }
      ],
      "panel": [
        {
          "id": "ibmi-panel",
          "title": "IBM i",
          "icon": "$(search)"
        }
      ]
    },
    "views": {
      "ibmi-panel": [
        {
          "type": "webview",
          "id": "vscode-db2i.resultset",
          "name": "Results",
          "when": "code-for-ibmi:connected == true",
          "contextualTitle": "IBM i"
        }
      ],
      "db2-explorer": [
        {
          "id": "schemaBrowser",
          "name": "Schema Browser",
          "visibility": "visible",
          "when": "code-for-ibmi:connected == true"
        },
        {
          "id": "queryHistory",
          "name": "Query History",
          "visibility": "visible",
          "when": "code-for-ibmi:connected == true"
        },
        {
          "id": "exampleBrowser",
          "name": "Examples",
          "visibility": "collapsed",
          "when": "code-for-ibmi:connected == true"
        },
        {
          "id": "jobManager",
          "name": "SQL Job Manager",
          "when": "code-for-ibmi:connected && vscode-db2i:jobManager"
        },
        {
          "id": "testingView-db2i",
          "name": "Test cases",
          "when": "code-for-ibmi:connected && vscode-db2i:testing"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "queryHistory",
        "contents": "Query history will appear here."
      },
      {
        "view": "jobManager",
        "contents": "The SQL Job Manager allows you to provision one or more jobs for running SQL statements, each with its own connection settings.\n\nUsing managed jobs reduces the use of system resources, improves performance, and maintains  state across subsequent SQL statements.\n\nYou can run SQL statements without starting a job, just be aware that every statement you run requires a temporary, single-use job to be started on your behalf. \n[New SQL job](command:vscode-db2i.jobManager.newJob)"
      }
    ],
    "keybindings": [
      {
        "command": "vscode-db2i.runEditorStatement",
        "key": "ctrl+r",
        "mac": "cmd+r",
        "when": "editorLangId == sql"
      }
    ],
    "commands": [
      {
        "command": "vscode-db2i.openSqlDocument",
        "title": "Open SQL Document",
        "category": "Db2 for i",
        "icon": "$(new-file)"
      },
      {
        "command": "vscode-db2i.refreshSchemaBrowser",
        "title": "Refresh Schema Browser",
        "category": "Db2 for i",
        "icon": "$(refresh)"
      },
      {
        "command": "vscode-db2i.addSchemaToSchemaBrowser",
        "title": "Add Schema to Schema Browser",
        "category": "Db2 for i",
        "icon": "$(add)"
      },
      {
        "command": "vscode-db2i.removeSchemaFromSchemaBrowser",
        "title": "Remove schema from view",
        "category": "Db2 for i",
        "icon": "$(remove)"
      },
      {
        "command": "vscode-db2i.generateSQL",
        "title": "Generate SQL",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.getRelatedObjects",
        "title": "Get Related Objects",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.getIndexes",
        "title": "Get Indexes",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.clearData",
        "title": "Clear...",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.copyData",
        "title": "Copy Data...",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.deleteObject",
        "title": "Delete...",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.renameObject",
        "title": "Rename...",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.advisedIndexes",
        "title": "Advised Indexes",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.clearAdvisedIndexes",
        "title": "Clear All Advised Indexes...",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.getResultSet",
        "title": "View contents",
        "category": "Db2 for i",
        "icon": "$(output)"
      },
      {
        "command": "vscode-db2i.setCurrentSchema",
        "title": "Set current schema",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.pasteGenerator",
        "title": "Paste JSON as SQL",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.runEditorStatement",
        "title": "Run selected statement",
        "category": "Db2 for i",
        "icon": "$(notebook-execute)"
      },
      {
        "command": "vscode-db2i.queryHistory.remove",
        "title": "Remove query from history",
        "category": "Db2 for i",
        "icon": "$(trash)"
      },
      {
        "command": "vscode-db2i.queryHistory.clear",
        "title": "Clear query history",
        "category": "Db2 for i",
        "icon": "$(trash)"
      },
      {
        "command": "vscode-db2i.examples.setFilter",
        "title": "Set filter",
        "category": "Db2 for i (Examples)",
        "icon": "$(filter)"
      },
      {
        "command": "vscode-db2i.examples.clearFilter",
        "title": "Clear filter",
        "category": "Db2 for i (Examples)",
        "icon": "$(clear-all)"
      },
      {
        "command": "vscode-db2i.jobManager.newJob",
        "title": "New SQL Job",
        "category": "Db2 for i",
        "icon": "$(database)"
      },
      {
        "command": "vscode-db2i.jobManager.closeJob",
        "title": "Close SQL Job",
        "category": "Db2 for i",
        "icon": "$(trash)"
      },
      {
        "command": "vscode-db2i.jobManager.endAll",
        "title": "Close All SQL Jobs",
        "category": "Db2 for i",
        "icon": "$(clear-all)"
      },
      {
        "command": "vscode-db2i.jobManager.editJobProps",
        "title": "Edit Connection Properties",
        "category": "Db2 for i",
        "icon": "$(edit)"
      },
      {
        "command": "vscode-db2i.jobManager.copyJobId",
        "title": "Copy Job Name",
        "category": "Db2 for i",
        "icon": "$(keyboard)"
      },
      {
        "command": "vscode-db2i.jobManager.viewJobLog",
        "title": "View Job Log",
        "category": "Db2 for i",
        "icon": "$(info)"
      },
      {
        "command": "vscode-db2i.jobManager.enableTracing",
        "title": "Enable Tracing",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.jobManager.getTrace",
        "title": "Get Trace Data",
        "category": "Db2 for i"
      },
      {
        "command": "vscode-db2i.jobManager.newConfig",
        "title": "Save settings to config",
        "category": "Db2 for i",
        "icon": "$(save)"
      },
      {
        "command": "vscode-db2i.jobManager.editConfig",
        "title": "Edit configuration",
        "category": "Db2 for i",
        "icon": "$(edit)"
      },
      {
        "command": "vscode-db2i.jobManager.deleteConfig",
        "title": "Delete configuration",
        "category": "Db2 for i",
        "icon": "$(trash)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-db2i.queryHistory.remove",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.closeJob",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.editJobProps",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.copyJobId",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.viewJobLog",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.enableTracing",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.getTrace",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.newConfig",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.editConfig",
          "when": "never"
        },
        {
          "command": "vscode-db2i.jobManager.deleteConfig",
          "when": "never"
        }
      ],
      "editor/context": [
        {
          "command": "vscode-db2i.pasteGenerator",
          "group": "1_sql",
          "when": "editorLangId == sql"
        }
      ],
      "editor/title": [
        {
          "command": "vscode-db2i.runEditorStatement",
          "when": "editorLangId == sql",
          "group": "navigation@2"
        },
        {
          "command": "code-for-ibmi.changeCurrentLibrary",
          "when": "editorLangId == sql",
          "group": "navigation@3"
        }
      ],
      "view/title": [
        {
          "command": "vscode-db2i.addSchemaToSchemaBrowser",
          "group": "navigation",
          "when": "view == schemaBrowser"
        },
        {
          "command": "vscode-db2i.refreshSchemaBrowser",
          "group": "navigation",
          "when": "view == schemaBrowser"
        },
        {
          "command": "vscode-db2i.queryHistory.clear",
          "group": "navigation",
          "when": "view == queryHistory"
        },
        {
          "command": "vscode-db2i.examples.setFilter",
          "group": "navigation",
          "when": "view == exampleBrowser"
        },
        {
          "command": "vscode-db2i.examples.clearFilter",
          "group": "navigation",
          "when": "view == exampleBrowser"
        },
        {
          "command": "vscode-db2i.openSqlDocument",
          "group": "navigation",
          "when": "view == jobManager"
        },
        {
          "command": "vscode-db2i.jobManager.newJob",
          "group": "navigation",
          "when": "view == jobManager"
        },
        {
          "command": "vscode-db2i.jobManager.endAll",
          "group": "navigation",
          "when": "view == jobManager"
        }
      ],
      "view/item/context": [
        {
          "command": "vscode-db2i.setCurrentSchema",
          "when": "viewItem == schema",
          "group": "db2@1"
        },
        {
          "command": "vscode-db2i.getResultSet",
          "when": "viewItem == table || viewItem == view || viewItem == alias",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.generateSQL",
          "when": "viewItem == table || viewItem == view || viewItem == alias || viewItem == constraint || viewItem == function || viewItem == variable || viewItem == index || viewItem == procedure || viewItem == sequence || viewItem == package || viewItem == trigger || viewItem == type",
          "group": "db2@2"
        },
        {
          "command": "vscode-db2i.removeSchemaFromSchemaBrowser",
          "when": "view == schemaBrowser && viewItem == schema",
          "group": "db2@3"
        },
        {
          "command": "vscode-db2i.getRelatedObjects",
          "when": "viewItem == table",
          "group": "db2workWith@1"
        },
        {
          "command": "vscode-db2i.getIndexes",
          "when": "viewItem == table",
          "group": "db2workWith@2"
        },
        {
          "command": "vscode-db2i.clearData",
          "when": "viewItem == table",
          "group": "db2data@1"
        },
        {
          "command": "vscode-db2i.copyData",
          "when": "viewItem == table || viewItem == view",
          "group": "db2data@2"
        },
        {
          "command": "vscode-db2i.deleteObject",
          "when": "viewItem == table || viewItem == view || viewItem == alias || viewItem == constraint || viewItem == function || viewItem == variable || viewItem == index || viewItem == procedure || viewItem == sequence || viewItem == package || viewItem == trigger || viewItem == type",
          "group": "db2data@3"
        },
        {
          "command": "vscode-db2i.renameObject",
          "when": "viewItem == table || viewItem == view || viewItem == index",
          "group": "db2data@4"
        },
        {
          "command": "vscode-db2i.advisedIndexes",
          "when": "viewItem == table",
          "group": "db2idxAdv@1"
        },
        {
          "command": "vscode-db2i.clearAdvisedIndexes",
          "when": "viewItem == table",
          "group": "db2idxAdv@2"
        },
        {
          "command": "vscode-db2i.queryHistory.remove",
          "when": "view == queryHistory && viewItem == query",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.jobManager.closeJob",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.jobManager.editJobProps",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.jobManager.copyJobId",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.jobManager.viewJobLog",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.jobManager.enableTracing",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "trace@1"
        },
        {
          "command": "vscode-db2i.jobManager.getTrace",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "trace@2"
        },
        {
          "command": "vscode-db2i.jobManager.newConfig",
          "when": "view == jobManager && viewItem == sqlJob",
          "group": "config@1"
        },
        {
          "command": "vscode-db2i.jobManager.editConfig",
          "when": "view == jobManager && viewItem == savedConfig",
          "group": "inline"
        },
        {
          "command": "vscode-db2i.jobManager.deleteConfig",
          "when": "view == jobManager && viewItem == savedConfig",
          "group": "inline"
        }
      ]
    }
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "language:test": "vitest",
    "package": "vsce package",
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch"
  },
  "devDependencies": {
    "@halcyontech/vscode-ibmi-types": "^1.8.0",
    "@types/glob": "^7.1.3",
    "@types/node": "14.x",
    "@types/vscode": "^1.70.0",
    "esbuild-loader": "^3.0.1",
    "eslint": "^7.32.0",
    "glob": "^7.1.7",
    "raw-loader": "^4.0.2",
    "ts-loader": "^9.3.1",
    "typescript": "^4.3.2",
    "vitest": "^0.33.0",
    "vscode-test": "^1.5.2",
    "webpack": "^5.24.3",
    "webpack-cli": "^4.5.0"
  },
  "dependencies": {
    "csv": "^6.1.3",
    "node-fetch": "^3.3.1",
    "octokit": "^2.0.14",
    "sql-formatter": "^4.0.2"
  }
}
